@namespace(uri="http://www.example.org/activity_lang", prefix="activity_lang")
package activity_lang;


@namespace(uri="https://mde-network.com/toolSpec", prefix="t")
package ToolSpecification {
	class PanelDefinition {
		val Button[*] buttons;
	}

	class Button extends ActivityConfiguration.ButtonOrButtonRef {
	}

}

@namespace(uri="https://mde-network.com/activitySpec", prefix="a")
package ActivityConfiguration {
	abstract class ButtonOrButtonRef {
		attr EString ~id;
		attr EString icon;
		attr EString hint;
		attr EString internalFunction;
		ref Panel[1] targetPanel;
	}

	class ButtonRef extends ButtonOrButtonRef {
		ref ToolSpecification.Button[0..1] ~ref;
	}

	class Panel {
		attr EString ~id;
		attr EString name;
		attr EString file;
		ref ToolSpecification.PanelDefinition[1] ~ref;
		val ButtonOrButtonRef[*] buttons;
		attr String refId;
	}

	class EditorDefinitionPanel extends Panel {
		ref Activity editorActivity;
		ref Panel editorPanel;
	}

	class ActivityConfiguration {
		val Activity[*] activities;
	}

	class CompositePanel extends Panel {
		val Panel[+] childPanels;
	}

	class Action {
		ref Panel[1] sourcePanel;
		ref ToolSpecification.Button[1] sourceButton;
		val Argument[*] arguments;
		ref Panel[1] output;
		ref Panel[0..1] outputConsole;
		attr EString outputType;
	}
	
	class LayoutRow {
		ref Panel[+] columns;
	}

	class ToolURL {
		attr EString urlPossiblyToRewrite;
	}

	class Activity {
		attr EString ~id;
		attr EString title;
		attr EString icon;
		val Panel[*] panels;
		val LayoutRow[*] layout;
		val Action[*] actions;
		attr String[*] tools;
		val ToolURL[*] toolURLs;
	}

	class Argument {
		attr EString key;
		attr EString value;
	}

}

